varnishtest "Test basics"

server s1 {
    rxreq
    txresp -hdr "Vary: X-Device"
} -repeat 5 -start

varnish v1 -vcl+backend {
    import ${vmod_gossip};

    sub vcl_recv {
        if (req.url ~ "^/gossip/dump/.+") {
            gossip.dump(regsub(req.url, "/gossip/dump", ""));
            return (synth(200, "Now dumping."));
        } elsif (req.url == "/gossip/discard/") {
            gossip.discard();
            return (synth(200, "Discarded."));
        }
    }

    sub vcl_backend_response {
        set beresp.http.X-Gossip-Info =
            {"{"} +
            {""path":""} + gossip.escape_json_string(bereq.url) + {"","} +
            {""device":""} + gossip.escape_json_string(bereq.http.X-Device) + {"","} +
            {""ip":""} + gossip.escape_json_string(client.ip) + {"""} +
            {"}"};
        set beresp.ttl = 0.5s;
        set beresp.grace = 10s;
    }
} -start

client c1 {
    txreq -url /foo \
          -hdr "X-Device: desktop"
    rxresp

    txreq -url /foo \
          -hdr "X-Device: desktop"
    rxresp

    txreq -url /bar \
          -hdr "X-Device: desktop"
    rxresp

    txreq -url /bar \
          -hdr "X-Device: mobile"
    rxresp

    delay 1.0
    txreq -url /gossip/dump${tmpdir}/objects1.json
    rxresp
    delay 0.1

    txreq -url /foo \
          -hdr "X-Device: desktop"
    rxresp

    txreq -url /baz \
          -hdr "X-Device: mobile"
    rxresp

    delay 0.1
    txreq -url /gossip/dump${tmpdir}/objects2.json
    rxresp
    delay 0.1

    txreq -url /baz \
          -hdr "X-Device: mobile"
    rxresp

    txreq -url /gossip/discard/
    rxresp

    delay 0.1
    txreq -url /gossip/dump${tmpdir}/objects3.json
    rxresp
    delay 0.1
} -run

delay 1.0

shell {
    cat <<'EOF' > ${tmpdir}/parse.sh
echo '----'
cat ${tmpdir}/$1 | sed -n 's/^.*"path":"\([^"]*\)".*"hits":\([0-9]*\).*$/\1[\2]/p' | sort
echo '----'
EOF
    chmod +x ${tmpdir}/parse.sh
}

shell -expect "----\n/bar[0]\n/bar[0]\n/foo[1]\n----\n" {
    ${tmpdir}/parse.sh objects1.json
}

shell -expect "----\n/baz[0]\n/foo[0]\n----\n" {
    ${tmpdir}/parse.sh objects2.json
}

shell -expect "----\n----\n" {
    ${tmpdir}/parse.sh objects3.json
}

varnish v1 -expect client_req == 11

varnish v1 -expect MGT.child_panic == 0
